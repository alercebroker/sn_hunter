{"remainingRequest":"/home/tronco/Desktop/alerce/sne_hunter_vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tronco/Desktop/alerce/sne_hunter_vue/src/components/Table.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tronco/Desktop/alerce/sne_hunter_vue/src/components/Table.vue","mtime":1563073047930},{"path":"/home/tronco/Desktop/alerce/sne_hunter_vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tronco/Desktop/alerce/sne_hunter_vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/tronco/Desktop/alerce/sne_hunter_vue/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/home/tronco/Desktop/alerce/sne_hunter_vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tronco/Desktop/alerce/sne_hunter_vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data: () => ({\n    pagination: {\n      sortBy: ['discovery_date','porb']\n    },\n    headers:[\n      { text: 'Object ID', value: 'oid' },\n      { text: 'Discovery Date', value: 'discovery_date' },\n      { text: 'Prob', value: 'prob' },\n    ]\n  }),\n  mounted: function(){\n    this.$store.dispatch(\"retrieveCandidates\",2);\n  },\n  computed: {\n    candidates(){\n      var sneCandidates = [];\n\n      var rawCandidates = this.$store.getters.getCandidates;\n      $.each(rawCandidates,function(key,values){\n        sneCandidates.push({\n          \"oid\": key,\n          \"discovery_date\": values[\"firstmjd\"],\n          \"prob\": values[\"pclassearly\"]\n        })\n      });\n\n    }\n  },\n  methods: {\n    changeSort (column) {\n      if (this.pagination.sortBy === column) {\n        this.pagination.descending = !this.pagination.descending\n      } else {\n        this.pagination.sortBy = column\n        this.pagination.descending = false\n      }\n    }\n  }\n}\n",{"version":3,"sources":["Table.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Table.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-data-table\n    :headers=\"headers\"\n    :pagination.sync=\"pagination\"\n    :items=\"candidates\"\n    item-key=\"oid\"\n    class=\"elevation-1\"\n  >\n    <template v-slot:headers=\"props\" id=\"sneCandidates\">\n      <tr>\n        <th\n          v-for=\"header in props.headers\"\n          :key=\"header.text\"\n          :class=\"['column sortable', pagination.descending ? 'desc' : 'asc', header.value === pagination.sortBy ? 'active' : '']\"\n          @click=\"changeSort(header.value)\"\n        >\n          <v-icon small>arrow_upward</v-icon>\n          {{ header.text }}\n        </th>\n      </tr>\n    </template>\n    <template v-slot:items=\"props\">\n      <tr>\n        <td>{{ props.item.name }}</td>\n        <td class=\"text-xs-right\">{{ props.item.calories }}</td>\n        <td class=\"text-xs-right\">{{ props.item.fat }}</td>\n        <td class=\"text-xs-right\">{{ props.item.carbs }}</td>\n        <td class=\"text-xs-right\">{{ props.item.protein }}</td>\n        <td class=\"text-xs-right\">{{ props.item.iron }}</td>\n      </tr>\n    </template>\n  </v-data-table>\n</template>\n\n<script>\n  export default {\n    data: () => ({\n      pagination: {\n        sortBy: ['discovery_date','porb']\n      },\n      headers:[\n        { text: 'Object ID', value: 'oid' },\n        { text: 'Discovery Date', value: 'discovery_date' },\n        { text: 'Prob', value: 'prob' },\n      ]\n    }),\n    mounted: function(){\n      this.$store.dispatch(\"retrieveCandidates\",2);\n    },\n    computed: {\n      candidates(){\n        var sneCandidates = [];\n\n        var rawCandidates = this.$store.getters.getCandidates;\n        $.each(rawCandidates,function(key,values){\n          sneCandidates.push({\n            \"oid\": key,\n            \"discovery_date\": values[\"firstmjd\"],\n            \"prob\": values[\"pclassearly\"]\n          })\n        });\n\n      }\n    },\n    methods: {\n      changeSort (column) {\n        if (this.pagination.sortBy === column) {\n          this.pagination.descending = !this.pagination.descending\n        } else {\n          this.pagination.sortBy = column\n          this.pagination.descending = false\n        }\n      }\n    }\n  }\n</script>\n"]}]}