{"remainingRequest":"/home/tronco/Desktop/alerce/sne_hunter_vue/node_modules/babel-loader/lib/index.js!/home/tronco/Desktop/alerce/sne_hunter_vue/node_modules/eslint-loader/index.js??ref--13-0!/home/tronco/Desktop/alerce/sne_hunter_vue/src/store.js","dependencies":[{"path":"/home/tronco/Desktop/alerce/sne_hunter_vue/src/store.js","mtime":1563130539819},{"path":"/home/tronco/Desktop/alerce/sne_hunter_vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tronco/Desktop/alerce/sne_hunter_vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/tronco/Desktop/alerce/sne_hunter_vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\n\nDate.prototype.subsDays = function (days) {\n  var date = new Date();\n  date.setDate(date.getDate() - days);\n  return date;\n};\n\nfunction dateToJD(date) {\n  var mjulianDate = date / 86400000 + 40588;\n  return mjulianDate;\n}\n\nfunction jdToDate(jd) {\n  var date = (jd - 40588) * 86400000;\n  return new Date(date);\n}\n\nfunction pad(str, max) {\n  str = str.toString();\n  return str.length < max ? pad(\"0\" + str, max) : str;\n}\n\nexport default new Vuex.Store({\n  state: {\n    sneCandidates: [],\n    selectedSne: null,\n    alertCandidate: null,\n    deltaDays: null,\n    zoomed: false,\n    table: null\n  },\n  mutations: {\n    SET_CANDIDATES: function SET_CANDIDATES(state, payload) {\n      state.sneCandidates = payload;\n    },\n    CLEAN_CANDIDATES: function CLEAN_CANDIDATES(state) {\n      state.sneCandidates = [];\n    },\n    SELECT_CANDIDATE: function SELECT_CANDIDATE(state, payload) {\n      state.selectedSne = payload;\n    },\n    CHANGE_DELTA: function CHANGE_DELTA(state, payload) {\n      state.deltaDays = payload;\n    },\n    SET_ZOOM: function SET_ZOOM(state, payload) {\n      state.zoomed = payload;\n    },\n    SET_CANDIDATE_ALERT: function SET_CANDIDATE_ALERT(state, payload) {\n      state.alertCandidate = payload;\n    },\n    SET_TABLE: function SET_TABLE(state, payload) {\n      state.table = payload;\n    },\n    UPDATE_TABLE: function UPDATE_TABLE(state, payload) {\n      state.table.clear();\n      var candidates = [];\n      $.each(payload, function (key, value) {\n        var mjd = value[\"firstmjd\"];\n        var date = jdToDate(mjd);\n        var dateStr = pad(date.getDate() + 1, 2) + '/' + pad(date.getMonth() + 1, 2) + '/' + date.getFullYear() + ' ' + pad(date.getHours(), 2) + \":\" + pad(date.getMinutes(), 2) + \":\" + pad(date.getSeconds(), 2);\n        var prob = value[\"pclassearly\"].toFixed(3);\n        var obj = {\n          oid: key,\n          discovery_date: dateStr,\n          prob: prob\n        };\n        candidates.push(obj);\n      });\n      state.table.rows.add(candidates).draw(false);\n    }\n  },\n  actions: {\n    retrieveAlert: function retrieveAlert(context, oid) {\n      var parameters = {\n        \"oid\": oid\n      };\n      axios.post(\"http://ztf.alerce.online/get_detections\", parameters).then(function (response) {\n        var alerts = response.data.result.detections;\n\n        if (alerts.length > 1) {\n          var firstmjd = 1 / 0;\n          var first_alert;\n          $.each(alerts, function (id, value) {\n            if (firstmjd > value[\"mjd\"]) {\n              firstmjd = value[\"mjd\"];\n              first_alert = id;\n            }\n          });\n          var selected = alerts[first_alert];\n        } else {\n          var selected = alerts[0];\n        }\n\n        context.commit(\"SET_CANDIDATE_ALERT\", selected);\n      }, function () {\n        console.log(\"Error\");\n      });\n    },\n    retrieveCandidates: function retrieveCandidates(context, delta) {\n      //Calculate stuff\n      var date = new Date();\n      var now_mjd = dateToJD(date);\n      var last_mjd = dateToJD(date.subsDays(delta));\n      var parameters = {\n        \"records_per_pages\": 100,\n        \"query_parameters\": {\n          \"filters\": {\n            \"classearly\": 2\n          },\n          \"dates\": {\n            \"firstmjd\": {\n              \"min\": last_mjd,\n              \"max\": now_mjd\n            }\n          }\n        },\n        \"sortBy\": \"pclassearly\",\n        \"total\": 100\n      };\n      axios.post(\"http://ztf.alerce.online/query\", parameters).then(function (response) {\n        context.commit(\"SET_CANDIDATES\", response.data.result);\n        context.commit(\"CHANGE_DELTA\", delta);\n        context.commit(\"SET_ZOOM\", false);\n        context.commit(\"UPDATE_TABLE\", response.data.result);\n      }, function () {\n        console.log(\"error\");\n      });\n    },\n    cleanCandidates: function cleanCandidates(context) {\n      context.commit(\"CLEAN_CANDIDATES\");\n    },\n    setSelectedCandidate: function setSelectedCandidate(context, selected) {\n      context.commit(\"SELECT_CANDIDATE\", selected);\n    },\n    setZoomed: function setZoomed(context) {\n      context.commit(\"SET_ZOOM\", true);\n    },\n    createTable: function createTable(context, id) {\n      var table = $(\"#sneCandidates\").DataTable({\n        \"pageLength\": 6,\n        \"dom\": \"t,p,r\",\n        \"order\": [[2, \"desc\"], [1, \"desc\"]],\n        \"responsive\": true,\n        \"searching\": true,\n        \"info\": false,\n        \"lengthChange\": false,\n        'processing': true,\n        'language': {\n          'loadingRecords': '&nbsp;',\n          'processing': 'Loading...'\n        },\n        \"columns\": [{\n          data: \"oid\"\n        }, {\n          data: \"discovery_date\"\n        }, {\n          data: \"prob\"\n        }]\n      });\n      context.commit(\"SET_TABLE\", table);\n    }\n  },\n  getters: {\n    getCandidates: function getCandidates(state) {\n      return state.sneCandidates;\n    },\n    getSelected: function getSelected(state) {\n      return state.selectedSne ? state.sneCandidates[state.selectedSne] : null;\n    },\n    getDeltaDays: function getDeltaDays(state) {\n      return state.deltaDays;\n    },\n    getZoomed: function getZoomed(state) {\n      return state.zoomed;\n    },\n    getAlert: function getAlert(state) {\n      return state.alertCandidate;\n    },\n    getTable: function getTable(state) {\n      return state.table;\n    }\n  }\n});",{"version":3,"sources":["/home/tronco/Desktop/alerce/sne_hunter_vue/src/store.js"],"names":["Vue","Vuex","use","Date","prototype","subsDays","days","date","setDate","getDate","dateToJD","mjulianDate","jdToDate","jd","pad","str","max","toString","length","Store","state","sneCandidates","selectedSne","alertCandidate","deltaDays","zoomed","table","mutations","SET_CANDIDATES","payload","CLEAN_CANDIDATES","SELECT_CANDIDATE","CHANGE_DELTA","SET_ZOOM","SET_CANDIDATE_ALERT","SET_TABLE","UPDATE_TABLE","clear","candidates","$","each","key","value","mjd","dateStr","getMonth","getFullYear","getHours","getMinutes","getSeconds","prob","toFixed","obj","oid","discovery_date","push","rows","add","draw","actions","retrieveAlert","context","parameters","axios","post","then","response","alerts","data","result","detections","firstmjd","first_alert","id","selected","commit","console","log","retrieveCandidates","delta","now_mjd","last_mjd","cleanCandidates","setSelectedCandidate","setZoomed","createTable","DataTable","getters","getCandidates","getSelected","getDeltaDays","getZoomed","getAlert","getTable"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nDate.prototype.subsDays = function(days) {\n  var date = new Date();\n  date.setDate(date.getDate() - days);\n  return date;\n}\nfunction dateToJD(date) {\n    var mjulianDate = date / 86400000 + 40588;\n    return mjulianDate;\n}\nfunction jdToDate(jd){\n  var date = (jd - 40588) * 86400000;\n  return new Date(date)\n}\nfunction pad (str, max) {\n  str = str.toString();\n  return str.length < max ? pad(\"0\" + str, max) : str;\n}\n\nexport default new Vuex.Store({\n  state: {\n    sneCandidates: [],\n    selectedSne: null,\n    alertCandidate:null,\n    deltaDays: null,\n    zoomed: false,\n    table: null\n  },\n  mutations: {\n    SET_CANDIDATES(state,payload){\n      state.sneCandidates = payload;\n    },\n    CLEAN_CANDIDATES(state){\n      state.sneCandidates = [];\n    },\n    SELECT_CANDIDATE(state,payload){\n      state.selectedSne = payload;\n    },\n    CHANGE_DELTA(state,payload){\n      state.deltaDays = payload;\n    },\n    SET_ZOOM(state,payload){\n      state.zoomed = payload;\n    },\n    SET_CANDIDATE_ALERT(state,payload){\n      state.alertCandidate = payload;\n    },\n    SET_TABLE(state,payload){\n      state.table = payload;\n    },\n    UPDATE_TABLE(state,payload){\n      state.table.clear();\n      var candidates = []\n      $.each(payload,function(key,value){\n        var mjd = value[\"firstmjd\"];\n        var date = jdToDate(mjd);\n        var dateStr = pad((date.getDate()+1),2) + '/' + pad((date.getMonth() + 1),2) + '/' +  date.getFullYear() + ' ' + pad(date.getHours(),2) + \":\" + pad(date.getMinutes(),2) + \":\" + pad(date.getSeconds(),2)\n        var prob = value[\"pclassearly\"].toFixed(3);\n        var obj ={\n          oid: key,\n          discovery_date: dateStr,\n          prob: prob\n        }\n        candidates.push(obj)\n      })\n      state.table.rows.add(candidates).draw(false);\n    }\n  },\n  actions: {\n    retrieveAlert(context,oid){\n      var parameters = {\"oid\":oid}\n      axios.post(\"http://ztf.alerce.online/get_detections\",parameters).then(function(response){\n        var alerts = response.data.result.detections;\n        if(alerts.length > 1){\n          var firstmjd = 1/0;\n          var first_alert;\n          $.each(alerts, function(id,value){\n            if(firstmjd > value[\"mjd\"]){\n              firstmjd = value[\"mjd\"];\n              first_alert = id;\n            }\n          });\n          var selected = alerts[first_alert];\n        }else{\n          var selected = alerts[0];\n        }\n        context.commit(\"SET_CANDIDATE_ALERT\",selected);\n      },function(){\n        console.log(\"Error\")\n      })\n    },\n    retrieveCandidates(context,delta){\n      //Calculate stuff\n      var date = new Date();\n      var now_mjd = dateToJD(date);\n      var last_mjd = dateToJD(date.subsDays(delta));\n\n      var parameters = {\n            \"records_per_pages\":100,\n            \"query_parameters\":\n            {\n              \"filters\":\n                      {\"classearly\": 2},\n              \"dates\":\n                      {\"firstmjd\":\n                        {\"min\":last_mjd,\"max\":now_mjd}\n                      }\n              },\n              \"sortBy\": \"pclassearly\",\n              \"total\":100\n      };\n      axios.post(\"http://ztf.alerce.online/query\",parameters).then(function(response){\n        context.commit(\"SET_CANDIDATES\", response.data.result);\n        context.commit(\"CHANGE_DELTA\",delta);\n        context.commit(\"SET_ZOOM\",false);\n        context.commit(\"UPDATE_TABLE\", response.data.result);\n      }, function(){\n        console.log(\"error\");\n      });\n    },\n    cleanCandidates(context){\n      context.commit(\"CLEAN_CANDIDATES\");\n    },\n    setSelectedCandidate(context,selected){\n      context.commit(\"SELECT_CANDIDATE\", selected);\n    },\n    setZoomed(context){\n      context.commit(\"SET_ZOOM\",true);\n    },\n    createTable(context,id){\n      var table = $(\"#sneCandidates\").DataTable({\n        \"pageLength\": 6,\n        \"dom\":\"t,p,r\",\n        \"order\": [[ 2, \"desc\" ],[1,\"desc\"]],\n        \"responsive\": true,\n        \"searching\": true, \"info\": false,\"lengthChange\":false,\n        'processing': true,\n        'language': {\n            'loadingRecords': '&nbsp;',\n            'processing': 'Loading...'\n        },\n        \"columns\": [\n          { data: \"oid\" },\n          { data: \"discovery_date\" },\n          { data: \"prob\" },\n        ],\n      });\n      context.commit(\"SET_TABLE\",table)\n    }\n  },\n  getters:{\n    getCandidates(state){\n      return state.sneCandidates;\n    },\n    getSelected(state){\n      return  state.selectedSne ? state.sneCandidates[state.selectedSne] : null;\n    },\n    getDeltaDays(state){\n      return state.deltaDays;\n    },\n    getZoomed(state){\n      return state.zoomed;\n    },\n    getAlert(state){\n      return state.alertCandidate;\n    },\n    getTable(state){\n      return state.table;\n    }\n  }\n})\n"]}]}